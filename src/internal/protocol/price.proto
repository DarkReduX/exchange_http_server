syntax = "proto3";

package protocol;

option go_package = "./protocol";


service PriceService {
  rpc SendPrice(Conn) returns(stream Price);
}

service PositionService {
  rpc SendClosePositionRequest(PositionCloseReq) returns(Response);
  rpc SendOpenPositionRequest(PositionOpenReq) returns(Response);
  rpc Login(LoginReq) returns(LoginResp);
  rpc Logout(Token) returns (Response);
  rpc GetUserData(Token) returns(UserData);
  rpc Donate(DonateValue) returns(Response);
}

message DonateValue {
  float val = 1;
  string token = 2;
}

message UserData {
  bytes positions = 1;
  float balance = 2;
}

message Token {
  string token = 1;
}

message LoginReq {
  string login = 1;
  string password = 2;
}

message LoginResp {
  string message = 1;
  string token = 2;
}

message Position {
  int64 uuid = 1;
  string symbol = 2;
  float bid = 3;
  float ask = 4;
  bool isBay = 5;
}

message PositionCloseReq {
  string symbol = 1;
  int64 id = 2;
  string token = 3;
  bool isbay = 4;
  float closePrice = 5;
}

message PositionOpenReq {
  int64 uuid = 1;
  string symbol = 2;
  float bid = 3;
  float ask = 4;
  bool isBay = 5;
  string token = 6;
}

message Response {
  string message = 1;
}

message Price {
  int64 uuid = 1;
  string symbol = 2;
  float bid = 3;
  float ask = 4;
}

message Conn {
  string message = 1;
}